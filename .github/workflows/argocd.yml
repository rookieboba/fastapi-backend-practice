name: CI/CD to ArgoCD

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      run: |
        IMAGE=terrnabin/fastapi_app
        TAG=${{ github.sha }}
        docker build --build-arg VERSION=$TAG -t $IMAGE:$TAG .
        docker push $IMAGE:$TAG

    - name: Bump image in K8s manifests
      run: |
        TAG=${{ github.sha }}
        yq e -i ".spec.template.spec.containers[0].image = \"terrnabin/fastapi_app:$TAG\"" k8s/rollout/fastapi-rollout.yaml
        git config user.name  "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add k8s/rollout/fastapi-rollout.yaml
        git commit -m "ci: bump image to $TAG"
        git pull --rebase origin main
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: latest

    - name: Verify Kubernetes connectivity
      run: kubectl get nodes

    - name: Download ArgoCD CLI
      run: |
        curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x argocd

    - name: ArgoCD Login & Sync
      env:
        ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
        ARGOCD_TOKEN:  ${{ secrets.ARGOCD_TOKEN }}
      run: |
        ./argocd login $ARGOCD_SERVER --auth-token $ARGOCD_TOKEN --grpc-web
        ./argocd app sync fastapi-app
        ./argocd app wait fastapi-app --health --timeout 120
