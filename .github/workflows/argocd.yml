# .github/workflows/argocd.yml
name: CI/CD to ArgoCD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      run: |
        IMAGE=terrnabin/fastapi_app
        TAG=${{ github.sha }}
        docker build --build-arg VERSION=$TAG -t $IMAGE:$TAG .
        docker push $IMAGE:$TAG

    - name: Bump image in K8s manifests
      run: |
        TAG=${{ github.sha }}
        # Update fastapi-rollout.yaml container image
        yq e -i ".spec.template.spec.containers[0].image = \"terrnabin/fastapi_app:$TAG\"" k8s/rollout/fastapi-rollout.yaml
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add k8s/rollout/fastapi-rollout.yaml
        git commit -m "ci: bump image to $TAG"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Sync ArgoCD Application
      run: |
        curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x argocd
        ./argocd login ${{ secrets.ARGOCD_SERVER }} --grpc-web --username admin --password ${{ secrets.ARGOCD_PASSWORD }}
        ./argocd app sync fastapi-app
        ./argocd app wait fastapi-app --health
      env:
        ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
        ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
